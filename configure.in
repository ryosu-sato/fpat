# The script generated by autoconf from this input will set the following
# variables:
#   OCAMLLEX      "ocamllex" (or "ocamllex.opt" if present)
#   OCAMLYACC     "ocamlyac"

# check for one particular file of the sources
# ADAPT THE FOLLOWING LINE TO YOUR SOURCES!
AC_INIT(lib/util.ml)

# we first look for ocamlfind
AC_CHECK_PROG(OCAMLFIND,ocamlfind,ocamlfind,no)
if test "$OCAMLFIND" = no ; then
    AC_MSG_ERROR(Cannot find ocamlfind)
else
    echo "ocamlfind detected"

    ZARITH=`ocamlfind query zarith | tr -d '\\r'`
    if test $ZARITH; then
        echo "zarith detected"
    else
        AC_MSG_ERROR(Cannot find zarith)
    fi

    CAMLP5=`ocamlfind query camlp5 | tr -d '\\r'`
    if test $CAMLP5; then
        echo "camlp5 detected"
    else
        AC_MSG_ERROR(Cannot find camlp5)
    fi
fi

# we extract OCaml version number
OCAMLVERSION=`$OCAMLFIND ocamlc -v | sed -n -e 's|.*version *\(.*\)$|\1|p' `
echo "ocaml version is $OCAMLVERSION"

# ocamllex and ocamlyacc should also be present in the path
AC_CHECK_PROG(OCAMLLEX,ocamllex,ocamllex,no)
if test "$OCAMLLEX" = no ; then
    AC_MSG_ERROR(Cannot find ocamllex.)
else
    AC_CHECK_PROG(OCAMLLEXDOTOPT,ocamllex.opt,ocamllex.opt,no)
    if test "$OCAMLLEXDOTOPT" != no ; then
        OCAMLLEX=$OCAMLLEXDOTOPT
    fi
fi

AC_CHECK_PROG(OCAMLYACC,ocamlyacc,ocamlyacc,no)
if test "$OCAMLYACC" = no ; then
    AC_MSG_ERROR(Cannot find ocamlyacc.)
fi

AC_CHECK_PROG(CC,gcc,gcc,no)
if test "$CC" = no ; then
    AC_MSG_ERROR(Cannot find gcc.)
fi

AC_CHECK_PROG(CXX,g++,g++,no)
if test "$CXX" = no ; then
    AC_MSG_ERROR(Cannot find g++.)
fi

AC_ARG_ENABLE(cvc3, [  --disable-cvc3 disable CVC3],,enable_cvc3=yes)
AC_MSG_CHECKING(whether to enable CVC3)
if test x$enable_cvc3 = xyes; then
  AC_MSG_RESULT(yes)
  ENABLE_CVC3=1
else
  AC_MSG_RESULT(no)
fi

AC_ARG_ENABLE(z3, [  --disable-z3 disable Z3],,enable_z3=yes)
AC_MSG_CHECKING(whether to enable Z3)
Z3=`ocamlfind query z3`
if test x$enable_z3 = xyes && test $Z3; then
  AC_MSG_RESULT(yes)
  ENABLE_Z3=1
else
  AC_MSG_RESULT(no)
fi

AC_ARG_ENABLE(csisat, [  --disable-csisat disable CSIsat],,enable_csisat=yes)
AC_MSG_CHECKING(whether to enable CSIsat)
if test x$enable_csisat = xyes; then
  AC_MSG_RESULT(yes)
  ENABLE_CSISAT=1
else
  AC_MSG_RESULT(no)
fi

AC_ARG_ENABLE(atp, [  --disable-atp disable ATP],,enable_atp=yes)
AC_MSG_CHECKING(whether to enable ATP)
if test x$enable_atp = xyes; then
  AC_MSG_RESULT(yes)
  ENABLE_ATP=1
else
  AC_MSG_RESULT(no)
fi

AC_ARG_ENABLE(apron, [  --disable-apron disable APRON],,enable_apron=yes)
AC_MSG_CHECKING(whether to enable APRON)
APRON=`ocamlfind query apron`
if test x$enable_apron = xyes && test $APRON; then
  AC_MSG_RESULT(yes)
  ENABLE_APRON=1
else
  AC_MSG_RESULT(no)
fi

# substitutions to perform
AC_SUBST(OCAMLLEX)
AC_SUBST(OCAMLYACC)
AC_SUBST(CC)

AC_SUBST(ENABLE_CVC3)
AC_SUBST(ENABLE_Z3)
AC_SUBST(ENABLE_CSISAT)
AC_SUBST(ENABLE_ATP)
AC_SUBST(ENABLE_APRON)

# Finally create the Makefile from Makefile.in
AC_OUTPUT(Makefile)
chmod a-w Makefile
